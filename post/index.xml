<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 胸无点墨 - quenwaz&#39;s personal blog</title>
    <link>https://quenwaz.github.io/post/</link>
    <description>Recent content in Posts on 胸无点墨 - quenwaz&#39;s personal blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 29 Jul 2023 09:40:22 +0800</lastBuildDate>
    <atom:link href="https://quenwaz.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>操作系统之动态链接库</title>
      <link>https://quenwaz.github.io/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B9%8B%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93/</link>
      <pubDate>Sat, 29 Jul 2023 09:40:22 +0800</pubDate>
      <guid>https://quenwaz.github.io/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B9%8B%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93/</guid>
      <description>&lt;h1 id=&#34;操作系统之动态链接库&#34;&gt;操作系统之动态链接库&lt;/h1&gt;&#xA;&lt;h2 id=&#34;静态库&#34;&gt;静态库&lt;/h2&gt;&#xA;&lt;p&gt;静态库也称为归档文件， 它是UNIX系统提供的第一种库。静态库带来以下好处：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker了解及基础使用篇</title>
      <link>https://quenwaz.github.io/post/docker--%E4%BA%86%E8%A7%A3%E5%8F%8A%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8%E7%AF%87/</link>
      <pubDate>Tue, 18 Jul 2023 21:16:02 +0800</pubDate>
      <guid>https://quenwaz.github.io/post/docker--%E4%BA%86%E8%A7%A3%E5%8F%8A%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8%E7%AF%87/</guid>
      <description>&lt;h1 id=&#34;docker--了解及基础使用篇&#34;&gt;Docker&amp;ndash;了解及基础使用篇&lt;/h1&gt;&#xA;&lt;h2 id=&#34;docker-架构&#34;&gt;Docker 架构:&lt;/h2&gt;&#xA;&lt;p&gt;Docker 包括三个基本概念:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Http之初见</title>
      <link>https://quenwaz.github.io/post/http%E4%B9%8B%E5%88%9D%E8%A7%81/</link>
      <pubDate>Thu, 13 Jul 2023 22:57:53 +0800</pubDate>
      <guid>https://quenwaz.github.io/post/http%E4%B9%8B%E5%88%9D%E8%A7%81/</guid>
      <description>&lt;h1 id=&#34;http之初见&#34;&gt;http之初见&lt;/h1&gt;&#xA;&lt;h2 id=&#34;http是如何工作的&#34;&gt;HTTP是如何工作的&lt;/h2&gt;&#xA;&lt;p&gt;首先从一个常规问题出发， 来初步了解http协议。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构之链表</title>
      <link>https://quenwaz.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Mon, 10 Jul 2023 23:17:10 +0800</pubDate>
      <guid>https://quenwaz.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%93%BE%E8%A1%A8/</guid>
      <description>&lt;h1 id=&#34;数据结构之链表&#34;&gt;数据结构之链表&lt;/h1&gt;&#xA;&lt;h2 id=&#34;什么是链表&#34;&gt;什么是链表&lt;/h2&gt;&#xA;&lt;p&gt;链表（Linked List）是一种常用的数据结构，用于存储一系列元素。与数组不同，链表中的元素不必在内存中连续存储，每个元素包含一个指向下一个元素的指针，通过这些指针，就可以将一组零散的内存块串联起来，形成一个链式结构。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux系统调用过程</title>
      <link>https://quenwaz.github.io/post/linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sun, 09 Jul 2023 21:39:06 +0800</pubDate>
      <guid>https://quenwaz.github.io/post/linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B/</guid>
      <description>&lt;p&gt;系统调用是一种软中断处理程序, 用于让程序从用户态陷入内核态, 以执行相应的操作。&lt;/p&gt;&#xA;&lt;h2 id=&#34;用例说明&#34;&gt;用例说明&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;应用程序调用系统调用接口,例如write、read等&lt;/li&gt;&#xA;&lt;li&gt;系统调用接口将参数传递给内核态， 然后触发软中断&lt;/li&gt;&#xA;&lt;li&gt;CPU检测到软中断后，将控制权转移到中断处理程序&lt;/li&gt;&#xA;&lt;li&gt;中断处理程序根据系统调用号， 在系统调用表中查找相应的系统调用处理函数，并执行相应的系统调用处理。&lt;/li&gt;&#xA;&lt;li&gt;系统调用处理完后， 将结果返回给中断处理程序，然后将控制权返回到用户态。&lt;/li&gt;&#xA;&lt;li&gt;系统调用接口将结果返回给应用程序。&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>C&#43;&#43;11右值，右值引用与转移语义</title>
      <link>https://quenwaz.github.io/post/c&#43;&#43;11%E5%8F%B3%E5%80%BC%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E4%B8%8E%E8%BD%AC%E7%A7%BB%E8%AF%AD%E4%B9%89/</link>
      <pubDate>Fri, 18 Jan 2019 19:44:33 +0000</pubDate>
      <guid>https://quenwaz.github.io/post/c&#43;&#43;11%E5%8F%B3%E5%80%BC%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E4%B8%8E%E8%BD%AC%E7%A7%BB%E8%AF%AD%E4%B9%89/</guid>
      <description>&lt;h2 id=&#34;作用&#34;&gt;作用&lt;/h2&gt;&#xA;&lt;p&gt;C++ 11引进右值引用，主要为了实现对象转移和完美转发。主要作用体现在&lt;strong&gt;避免对象之间无必要的拷贝，节省存储资源以及提高效率&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
